name: CI/CD Pipeline
run-name: CI/CD Pipeline for AWS CDK and S3 Deployment

on:
  push:
    branches:
      - main
      - homolog
      - develop
      - 'feat/**'
      - 'fix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - homolog
      - develop

jobs:
  ci_pipeline:
    if: startsWith(github.ref, 'refs/heads/feat/') || startsWith(github.ref, 'refs/heads/fix/') || startsWith(github.ref, 'refs/heads/hotfix/')
    name: CI Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (CDK)
        run: |
          cd infrastructure/cdk
          npm ci

      - name: Lint code
        run: |
          cd infrastructure/cdk
          npm run lint || echo "No lint script defined"

      - name: Static analysis (example with tsc)
        run: |
          cd infrastructure/cdk
          npx tsc --noEmit

      - name: Build CDK
        run: |
          cd infrastructure/cdk
          npm run build

      - name: Run CDK tests
        run: |
          cd infrastructure/cdk
          npm test

  cd_pipeline:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/homolog' || github.ref == 'refs/heads/develop'
    name: CD Pipeline
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    env:
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      CDK_ENV_NAME: ${{ vars.CDK_ENV_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CDK globally
        run: npm install -g aws-cdk@2.101.1

      - name: Install dependencies (CDK)
        run: |
          cd infrastructure/cdk
          npm ci

      - name: Lint code
        run: |
          cd infrastructure/cdk
          npm run lint || echo "No lint script defined"

      - name: Static analysis (example with tsc)
        run: |
          cd infrastructure/cdk
          npx tsc --noEmit

      - name: Build CDK
        run: |
          cd infrastructure/cdk
          npm run build

      - name: Run CDK tests
        run: |
          cd infrastructure/cdk
          npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Synthesize CDK
        run: |
          cd infrastructure/cdk
          cdk synth -c envname=$CDK_ENV_NAME -c sessionparameter=true -c kinesisintegration=true -c firehose=true -c deploycdn=true

      - name: Bootstrap CDK
        run: |
          cd infrastructure/cdk
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          cdk bootstrap aws://$ACCOUNT_ID/${{ env.AWS_DEFAULT_REGION }} -c envname=$CDK_ENV_NAME

      - name: Deploy CDK
        run: |
          cd infrastructure/cdk
          cdk deploy -c envname=$CDK_ENV_NAME -c sessionparameter=true -c kinesisintegration=true -c firehose=true -c deploycdn=true --require-approval never
