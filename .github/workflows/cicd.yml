name: CI/CD Pipeline
run-name: CI/CD Pipeline for AWS CDK and S3 Deployment

on:
  push:
    branches:
      - main
      - homolog
      - develop
  pull_request:
    branches:
      - main
      - homolog
      - develop

jobs:
  cicd_pipeline:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    env:
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      CDK_ENV_NAME: ${{ vars.CDK_ENV_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CDK globally
        run: npm install -g aws-cdk@2.101.1

      - name: Install dependencies (CDK)
        run: |
          cd infrastructure/cdk
          npm ci

      - name: Build CDK
        run: |
          cd infrastructure/cdk
          npm run build

      - name: Run CDK tests
        run: |
          cd infrastructure/cdk
          npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Synthesize CDK
        run: |
          cd infrastructure/cdk
          cdk synth -c envname=$CDK_ENV_NAME -c sessionparameter=true -c kinesisintegration=true -c firehose=true -c deploycdn=true

      - name: Deploy CDK
        run: |
          cd infrastructure/cdk
          cdk deploy -c envname=$CDK_ENV_NAME -c sessionparameter=true -c kinesisintegration=true -c firehose=true -c deploycdn=true --require-approval never

      - name: Set bucket name (lowercase)
        id: bucket
        run: echo "BUCKET_NAME=$(echo $CDK_ENV_NAME | tr 'A-Z' 'a-z').app" >> $GITHUB_ENV

      - name: Wait for S3 bucket to exist
        run: |
          for i in {1..10}; do
            aws s3 ls "s3://$BUCKET_NAME" && break || sleep 10
          done

      - name: Deploy Frontend to S3
        run: |
          aws s3 sync application/ s3://$BUCKET_NAME --delete
